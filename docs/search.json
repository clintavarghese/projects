[
  {
    "objectID": "mini.html",
    "href": "mini.html",
    "title": "Projects",
    "section": "",
    "text": "In this analysis, I investigated the impact of different state-level electoral vote allocation methods on presidential election outcomes. I compared various allocation strategies, assessed fairness and proportionality, and created visualizations like red/blue electoral maps using data from the MIT Election Lab and the US Census Bureau’s TIGER repository.\n\n\n\n\n\n\n\nThis project positioned me as a Hollywood development executive, analyzing large-scale IMDb data to pitch a new movie. I developed proficiency in handling large datasets and relational data structures through techniques like table joins, enhancing my skills in managing and interpreting extensive information.\n\n\n\n\n\n\n\nI investigate the fiscal characteristics of US public transit authorities. In this project, I handle the data import and tidying; students are mainly responsible for “single table” dplyr operations (mutate, group_by, summarize, select, arrange, rename) to produce summary statistics.\n\n\n\n\n\n\n\nFor this project, I conducted a comparative analysis of two CUNY retirement plans using Monte Carlo simulations. By incorporating historical financial and macroeconomic data, I assessed the probability of different retirement outcomes. This experience included working with APIs, implementing complex simulations, and applying bootstrap inference techniques to quantify prediction uncertainties."
  },
  {
    "objectID": "mini.html#my-projects-in-r",
    "href": "mini.html#my-projects-in-r",
    "title": "Projects",
    "section": "",
    "text": "In this analysis, I investigated the impact of different state-level electoral vote allocation methods on presidential election outcomes. I compared various allocation strategies, assessed fairness and proportionality, and created visualizations like red/blue electoral maps using data from the MIT Election Lab and the US Census Bureau’s TIGER repository.\n\n\n\n\n\n\n\nThis project positioned me as a Hollywood development executive, analyzing large-scale IMDb data to pitch a new movie. I developed proficiency in handling large datasets and relational data structures through techniques like table joins, enhancing my skills in managing and interpreting extensive information.\n\n\n\n\n\n\n\nI investigate the fiscal characteristics of US public transit authorities. In this project, I handle the data import and tidying; students are mainly responsible for “single table” dplyr operations (mutate, group_by, summarize, select, arrange, rename) to produce summary statistics.\n\n\n\n\n\n\n\nFor this project, I conducted a comparative analysis of two CUNY retirement plans using Monte Carlo simulations. By incorporating historical financial and macroeconomic data, I assessed the probability of different retirement outcomes. This experience included working with APIs, implementing complex simulations, and applying bootstrap inference techniques to quantify prediction uncertainties."
  },
  {
    "objectID": "mp01.html#i.-introduction",
    "href": "mp01.html#i.-introduction",
    "title": "Analyzing Transit Data",
    "section": "I. Introduction",
    "text": "I. Introduction\nThis project is inspired from popular CityNerd Youtube channel’s presentation on Farebox Recovery. The main goal of this mini project is to explore, analyze, and interpret transit data from various sources to derive insights into ridership trends, agency performance, and the financial efficiency of transit systems for the year 2022.\nThe primary source of data is from National Transit Database\nThe datasets used in this analysis is from\n\nThe 2022 Annual Database Fare Revenues table\nThe latest Monthly Ridership tables\nThe 2022 Operating Expenses reports\n\nThe analysis primarily focuses on key financial and operational performance metrics, such as Vehicle Revenue Miles (VRM), Unlinked Passenger Trips (UPT), and Farebox Recovery Ratio (the ratio of total fares to expenses). Additional explorations focus on the most efficient transit modes and the busiest metropolitan areas."
  },
  {
    "objectID": "mp01.html#ii.-data-preparation",
    "href": "mp01.html#ii.-data-preparation",
    "title": "Analyzing Transit Data",
    "section": "II. Data Preparation",
    "text": "II. Data Preparation\n\nLoading Required Libraries\nTo begin, we load the necessary R libraries, primarily using the tidyverse package for data wrangling and DT for data visualization.\n\n\nCode\n#|warning: false\n#|message: false\n\nif (!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\n\nLoading required package: tidyverse\n\n\nWarning: package 'ggplot2' was built under R version 4.4.2\n\n\nWarning: package 'readr' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nif (!require(\"DT\")) install.packages(\"DT\")\n\n\nLoading required package: DT\n\n\nCode\nlibrary(tidyverse)\nlibrary(DT)\n\n\n\n\nImporting Datasets\nWe imported three main datasets: Fare Revenue (FARES), Operating Expenses (EXPENSES), and Ridership Data (TRIPS, MILES). These were cleaned and filtered to remove irrelevant columns, resulting in a dataset that focuses on total fares, expenses, and VRM/UPT data.\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\nFARES &lt;- readxl::read_xlsx(\"MP-DATA/2022 Fare Revenue.xlsx\")\nEXPENSES &lt;- readr::read_csv(\"MP-DATA/2022_NTD_Annual_Data_-_Operating_Expenses__by_Function__20231102.csv\")\n\n\nRows: 3744 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Agency, City, State, NTD ID, Organization Type, Reporter Type, UZA...\ndbl  (2): Report Year, UACE Code\nnum (10): Primary UZA Population, Agency VOMS, Mode VOMS, Vehicle Operations...\nlgl  (7): Vehicle Operations Questionable, Vehicle Maintenance Questionable,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nTRIPS &lt;- readxl::read_xlsx(\"MP-DATA/July 2024 Complete Monthly Ridership (with adjustments and estimates)_240903.xlsx\", sheet=\"UPT\")\nMILES &lt;- readxl::read_xlsx(\"MP-DATA/July 2024 Complete Monthly Ridership (with adjustments and estimates)_240903.xlsx\", sheet=\"VRM\")\n\n\n\n\nData Cleaning\nAfter importing the data, several unnecessary columns were dropped to keep the datasets focused on the required metrics (UPT, VRM, Expenses, etc.)\nTo extract monthly financials such as Total Fares and Expenses for each mode, A new dataset (FINANCIALS) is created by joining Fare Revenue (FARES), Operating Expenses (EXPENSES). It contains (NTD ID, Agency Name , Mode, Total Fares, Expenses)\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\nFARES &lt;- FARES|&gt;\n    select(-`State/Parent NTD ID`, \n           -`Reporter Type`,\n           -`Reporting Module`,\n           -`TOS`,\n           -`Passenger Paid Fares`,\n           -`Organization Paid Fares`) |&gt;\n    filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n    select(-`Expense Type`) |&gt;\n    group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`\n             `Agency Name`,  # These are direct operated and sub-contracted \n             `Mode`) |&gt;      # of the same transit modality\n                             # Not a big effect in most munis (significant DO\n                             # tends to get rid of sub-contractors), but we'll sum\n                             # to unify different passenger experiences\n    summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n    ungroup()\n\n\n`summarise()` has grouped output by 'NTD ID', 'Agency Name'. You can override\nusing the `.groups` argument.\n\n\nCode\nEXPENSES&lt;- EXPENSES|&gt;\n    select(`NTD ID`, \n           `Agency`,\n           `Total`, \n           `Mode`) |&gt;\n    mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n    rename(Expenses = Total) |&gt;\n    group_by(`NTD ID`, `Mode`) |&gt;\n    summarize(Expenses = sum(Expenses)) |&gt;\n    ungroup()\n\n\n`summarise()` has grouped output by 'NTD ID'. You can override using the\n`.groups` argument.\n\n\nCode\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\n\nSimilarly to extract monthly transits numbers such as Unlinked Passenger Trip and Vehicle Revenue Miles for each agency and mode, a new data set USAGE(USAGE) is created by joining TRIPS (TRIPS) and MILES (MILES). It contains (NTD ID,Agency ,UZA Name,Mode,3 Mode,month,UPT, VRM )\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n#|\nTRIPS &lt;- TRIPS |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"UPT\") |&gt;\n            drop_na() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- MILES |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"VRM\") |&gt;\n            drop_na() |&gt;\n            group_by(`NTD ID`, `Agency`, `UZA Name`, \n                     `Mode`, `3 Mode`, month) |&gt;\n            summarize(VRM = sum(VRM)) |&gt;\n            ungroup() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n    mutate(`NTD ID` = as.integer(`NTD ID`))"
  },
  {
    "objectID": "mp01.html#iii.-exploratory-data-analysis-eda",
    "href": "mp01.html#iii.-exploratory-data-analysis-eda",
    "title": "Analyzing Transit Data",
    "section": "III. Exploratory Data Analysis (EDA)",
    "text": "III. Exploratory Data Analysis (EDA)\n\nSampling and Displaying Data\n\nUSAGE\nThe str(str) function is used to get an overview of the datatypes.\n\n\nCode\nstr(USAGE)\n\n\ntibble [281,010 × 8] (S3: tbl_df/tbl/data.frame)\n $ NTD ID  : int [1:281010] 1 1 1 1 1 1 1 1 1 1 ...\n $ Agency  : chr [1:281010] \"King County\" \"King County\" \"King County\" \"King County\" ...\n $ UZA Name: chr [1:281010] \"Seattle--Tacoma, WA\" \"Seattle--Tacoma, WA\" \"Seattle--Tacoma, WA\" \"Seattle--Tacoma, WA\" ...\n $ Mode    : chr [1:281010] \"DR\" \"DR\" \"DR\" \"DR\" ...\n $ 3 Mode  : chr [1:281010] \"Bus\" \"Bus\" \"Bus\" \"Bus\" ...\n $ month   : Date[1:281010], format: \"2002-01-01\" \"2002-02-01\" ...\n $ UPT     : num [1:281010] 135144 127378 136030 142204 144697 ...\n $ VRM     : num [1:281010] 746158 656324 726578 736975 746158 ...\n\n\nFor easier readability, the column names are renamed, for ex: UZA Name can be renamed as metro_area. I have decided to keep UPT and VRM as is since its harder to rename with its full abbreviation.\n\nTask 1\n\n\n\n\n\n\nCreating Syntatic Names\n\n\n\nRename a column: UZA Name to metro_area.\n\n\nCode\nUSAGE &lt;- rename(USAGE, \n               metro_area = `UZA Name`\n               )\n\n\n\n\n\n\nTASK 2\n\n\n\n\n\n\nRecoding the Mode column\n\n\n\nThe details for what each Mode represents were found in National Transit Database (NTD) Glossary\n\n\nCode\nUSAGE &lt;- USAGE |&gt;\n    mutate(Mode = case_when(\n        Mode == \"AR\" ~ \"Alaska Rail\",\n        Mode == \"CB\" ~ \"Commuter Bus\",\n        Mode == \"CC\" ~ \"Cable Car\",\n        Mode == \"CR\" ~ \"Commuter Rail\",\n        Mode == \"DR\" ~ \"Demand Response\",\n        Mode == \"FB\" ~ \"Ferryboat\",\n        Mode == \"HR\" ~ \"Heavy Rail\",\n        Mode == \"IP\" ~ \"Inclined Plane\",\n        Mode == \"LR\" ~ \"Light Rail\",\n        Mode == \"MB\" ~ \"Motor Bus\",\n        Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n        Mode == \"PB\" ~ \"Publico\",\n        Mode == \"RB\" ~ \"Bus Rapid Transit\",\n        Mode == \"SR\" ~ \"Streetcar Rail \",\n        Mode == \"TB\" ~ \"Trolleybus \",\n        Mode == \"TR\" ~ \"Aerial Tramway\",\n        Mode == \"VP\" ~ \"Vanpool\",\n        Mode == \"YR\" ~ \"Hybrid Rail\",\n        TRUE ~ \"Unknown\"\n    ))\n\n\n\n\nTo get an overview of the ridership data (USAGE), we sampled 1000 records and displayed them using an interactive datatable.\n\n\n\n\n\n\n\n\n\nFINANCIALS\n\n\nCode\nstr(FINANCIALS)\n\n\ntibble [1,173 × 5] (S3: tbl_df/tbl/data.frame)\n $ NTD ID     : num [1:1173] 1 1 1 1 1 1 1 1 2 2 ...\n $ Agency Name: chr [1:1173] \"King County Department of Metro Transit\" \"King County Department of Metro Transit\" \"King County Department of Metro Transit\" \"King County Department of Metro Transit\" ...\n $ Mode       : chr [1:1173] \"CB\" \"DR\" \"FB\" \"LR\" ...\n $ Total Fares: num [1:1173] 5216912 832327 1715265 29386480 56846337 ...\n $ Expenses   : num [1:1173] 0.00 6.05e+07 8.90e+06 0.00 6.72e+08 ...\n\n\nFor easier readability the Mode is recoded\nHere is the overview of the ridership data (FINANCIALS),\n\n\nCode\nFINANCIALS |&gt;  DT::datatable()\n\n\n\n\n\n\n\nTask 4\n\n\n\n\n\n\nAnswering Instructor Specified Questions with dplyr.\n\n\n\nA.Vehicle Revenue Miles (VRM) Analysis\n\nVRM refers to Vehicle Revenue Miles.\nIt is the miles that vehicles are scheduled to or actually travel while in revenue service. (total number of miles traveled by a vehicle while it is in service and generating revenue by transporting passengers. It is used in public transportation and transit systems to measure the productive service a vehicle provides.)\nVehicle revenue miles include: Layover / recovery time\nVehicle revenue miles exclude: Deadhead, Operator training,Vehicle maintenance testing, and Other non-revenue uses of vehicles.\n\n1.Which transit agency had the most total VRM?\n\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n#|\ntable_creation&lt;-function(x){\n  datatable(x, \n            options = list(\n    searching = FALSE,   # Removes the search bar\n    pageLength = 10,      # Optional: Set the number of rows displayed per page\n    lengthChange = FALSE,# Removes the option to change the number of rows displayed\n     dom = 't'\n  ),\n  filter = 'none'\n  )  \n}\n\n\n\n\nBy summarizing VRM across transit agencies from 2002 to 2024, (I created a function named table_creation to tables)\n\n\n\n\nCode\ntable_creation(\n  USAGE %&gt;%\n    group_by(Agency) %&gt;%\n    summarise(`total_VRM($/miles)` = sum(VRM)) %&gt;%\n    arrange(desc(`total_VRM($/miles)`)) %&gt;%\n    slice(1:3))\n\n\n\n\n\n\nThe transit agency with the highest VRM in the sample is identified as\nAgency: MTA New York City Transit with Total_VRM: 10.83 billion revenue miles\n\n2.Which transit mode had the most total VRM?\nSimilarly, the analysis was performed by transit mode and arranged in descending order.\n\n\n\nCode\ntable_creation(USAGE %&gt;%\n  group_by(Mode) %&gt;%\n  summarise(`total_VRM($/miles)` = sum(VRM)) %&gt;%\n  arrange(desc(`total_VRM($/miles)`) )|&gt; slice(1:3))\n\n\n\n\n\n\nThe transist Mode (Motor Bus) had the total VRM of (49.45 billion revenue miles)\n\n3.NYC Subway Ridership in May 2024\nTo analyze ridership on the NYC Subway, we filtered the data for Heavy Rail in May 2024 and retrieved UPT values:\n\n\n\nCode\ntable_creation(USAGE %&gt;%\n  filter(Mode == 'Heavy Rail' & str_detect(Agency, \"New York City\") & month == \"2024-05-01\") %&gt;%\n  select(Mode,UPT))\n\n\n\n\n\n\nThe monthly ridership of subway for month of May 2025 is total UPT of (180.46 million)\n\n\n4.NYC Subway Ridership Decline from April 2019 to April 2020\nA significant decline in ridership was observed between April 2019 and April 2020. The percentage decline was calculated, and the ridership trend was plotted:\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\nNYC_subway &lt;- USAGE %&gt;%\n  filter(month&gt;=\"2019-04-01\", month &lt;= \"2024-04-01\", , Mode == 'Heavy Rail' & str_detect(Agency, \"New York City\"))\n\n# Calculate the percentage decline from April 2019 to April 2020\nstart_value &lt;- NYC_subway %&gt;% filter(month == \"2019-04-01\") %&gt;% pull(UPT)\nend_value &lt;- NYC_subway %&gt;% filter(month == \"2020-04-01\") %&gt;% pull(UPT)\ndecline_percentage &lt;- ((start_value - end_value) / start_value) * 100\n\n# Create the plot\nggplot(NYC_subway, aes(month, UPT / 1000000)) +\n  geom_line(color=\"blue\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(title = paste(\"NYC Subway Ridership Data (April 2019 - April 2024)\\nDecline: \",\n                     round(decline_percentage, 2), \"% from (04/2019-04/2020)\"),  # Display decline percentage in title\n       x = \"timeline\",\n       y = \"UPT (Unlinked Passenger Trips) in Millions\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThe subway system experienced a 91.28% decline in ridership between April 2019 and April 2020.\nHowever, post-pandemic, ridership has been steadily increasing.However,with the rise of hybrid work culture, monthly UPT rides now show a fluctuating, zigzag pattern.\n\nQuestions that I explore by myself\n\n#1. Which are the top 5 metropolitan areas with the highest number of transit agencies?\n\n\n\nCode\ntable_creation(USAGE |&gt;group_by(metro_area)|&gt;\nsummarize(`number of agencies` =length(unique(Agency)))|&gt;\narrange(desc(`number of agencies`)) |&gt;\nslice(1:5))\n\n\n\n\n\n\nThere are 38 agencies operating in the NY–Jersey City–Newark, NY–NJ metro area and 22 agencies in the Los Angeles–Long Beach, CA region. Let’s focus on the NY–NJ area.\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\nUSAGE&lt;-USAGE|&gt;mutate(year=year(month))\nNY_NJ&lt;-USAGE |&gt; \n  filter(metro_area == \"New York--Jersey City--Newark, NY--NJ\") |&gt;\n  group_by(year, Agency,Mode) |&gt; \n  summarize(\n    total_VRM = sum(VRM, na.rm = TRUE), \n    total_UPT = sum(UPT, na.rm = TRUE), \n    \n    ratio = if_else(total_VRM&gt;0, total_VRM,NA_real_) / if_else(total_UPT &gt; 0, total_UPT, NA_real_), .groups = 'drop'\n  )|&gt;ungroup()\n\n\n\n#2 What type of Transist Modes are Offered by Agencies in NY-NJ Metro Area\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\n# Filter for the year 2023, group by Agency and Mode, and count occurrences\ntable_creation(NY_NJ %&gt;%\n  filter(year == 2023) %&gt;%\n  group_by(Mode) %&gt;%\n  summarize(count = n() )%&gt;%  # Count occurrences of each mode\n  ungroup()|&gt;arrange(desc(count)))\n\n\n\n\n\n\nMost agencies in NY-NJ Metro area offers Bus services. Lets see how is the presence of each mode with in Agencies.\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\nNY_NJ &lt;- NY_NJ |&gt; \n  mutate(Agency = case_when(\n    Agency== \"Metro-North Commuter Railroad Company, dba: MTA Metro-North Railroad\" ~ \"MTA Metro_North\",\n    Agency== \"New York City Department of Transportation\"~\"NYC_DOT\",\n    Agency== \"New York City Economic Development Corporation\"~\"NYC_EDC\",\n    Agency== \"Staten Island Rapid Transit Operating Authority\"~\"Staten Island Transit\",\n    \n    TRUE ~ Agency  # Keep the original name if no match is found\n  ))\n\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\nagency_modes_2023 &lt;- NY_NJ %&gt;%\n  filter(year == 2023) %&gt;%\n  group_by(Agency, Mode) %&gt;%\n  summarize(count = n(),.groups=\"drop\") %&gt;%  # Count occurrences of each mode\n  ungroup()\n\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\nggplot(agency_modes_2023, aes(x = Mode, y = Agency)) +\n  geom_point(aes(color = Mode), size = 2)+  # Create a tile for each combination of mode and agency\n  labs(title = \"Presence of Transit Modes by Agency\\n,\n       New York--Jersey City--Newark\",\n       y = \"Agency\", \n       x = \"Transit Modes (2023)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),\n        panel.grid.major = element_line(size = 0.75, color = \"grey70\"),  # Major grid lines\n    panel.grid.minor = element_line(size = 0.5, color = \"grey85\"),  # Minor grid lines for a sharper effect\n    panel.grid.major.x = element_blank())\n\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\n\n\n\nIt’s surprising to see that the Vanpool service is exclusively offered by NJT. Given the vastness of the NY-NJ metropolitan area, it would be beneficial to promote Vanpool services similar to how other major cities like the SF-LA area are doing.\n\n#3 Which Mode of transit achieved the highest Vehicle Revenue Miles (VRM) per trip each year.\n\nThe VRM per trip ratio provides valuable insights into agency efficiency. A lower ratio indicates higher vehicle utilization, meaning the agency is transporting more passengers per mile of service. Typically, urban areas tend to have lower VRM per trip ratios compared to rural areas.\nTo assess the efficiency of agencies in the NY–NJ metropolitan area, we calculated the ratio of VRM to Unlinked Passenger Trips (UPT). This ratio reflects how well transit systems are utilizing their vehicles in relation to passenger demand, with a lower VRM/UPT ratio indicating better efficiency.\n\n#Which Transist Mode is profitable in termns of VRM/UPT Ratio:\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\nggplot(NY_NJ|&gt;filter(year&gt;=2002,year&lt;=2024)|&gt;group_by(Agency,Mode)|&gt;ungroup(), aes(x = ratio, y = Mode,fill=Mode)) +\n  geom_boxplot() +\n  labs(title = \"Distribution of VRM/UPT Ratios by Transit Mode from 2002 - 2024\",\n       y = \"Transit Mode\", \n       x = \"VRM/UPT Ratio\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\ncat(\"## Median Ratio by Agency and Mode (Up to 2024)\\n\")\n\n\n## Median Ratio by Agency and Mode (Up to 2024)\n\n\nCode\ntable_creation(\n  NY_NJ|&gt;filter(year&lt;=2024)|&gt;\n    group_by(Agency,Mode)|&gt;\n    summarize(median_ratio=round(median(ratio,na.rm=TRUE),2),.groups=\"drop\")|&gt;\n                arrange(median_ratio))\n\n\n\n\n\n\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\ncat(\"## Table for mean of median VRM/UPT ratios for each mode in NY-NJ Metro Area Till 2024\")\n\n\n## Table for mean of median VRM/UPT ratios for each mode in NY-NJ Metro Area Till 2024\n\n\nCode\ntable_creation(\n# Calculate the mean of median ratios for each mode from 2021 to 2024\nmean_median_ratios &lt;- NY_NJ %&gt;%\n  filter(year &lt;= 2024) %&gt;%\n  group_by(Agency, Mode) %&gt;%\n  summarize(median_ratio = median(ratio, na.rm = TRUE), .groups = 'drop') %&gt;%  # Calculate median ratio for each agency and mode\n  group_by(Mode) %&gt;%\n  summarize(mean_of_median = round(mean(median_ratio, na.rm = TRUE),2),no_agency=n(), .groups = 'drop')|&gt;arrange(mean_of_median))  # Calculate mean of median ratios for each mode)\n\n\n\n\n\n\nFerryboat service and heavy rail service has the lowest VRM/UPT ratio after factoring no-agencies contributing to the data, This means those modes have better operational efficiency in terms of ridership relative to miles driven. Since there is only 1 agency contributing to the bus rapid transist, it is hard to determine its universality."
  },
  {
    "objectID": "mp01.html#iv.-financial-and-usage-data-analysis",
    "href": "mp01.html#iv.-financial-and-usage-data-analysis",
    "title": "Analyzing Transit Data",
    "section": "IV. Financial and Usage Data Analysis",
    "text": "IV. Financial and Usage Data Analysis\n\nCombining USAGE and FINANCIALS\nAnalysing some data about financial recovery\nThe USAGE and FINANCIALS datasets were combined, and as a threshold total UPT &gt; 400000 is been taken into consideration.\n\n\nCode\n#|warning: false\n#|message: false\n#|results: hide\n\nUSAGE_2022_ANNUAL&lt;- USAGE |&gt; filter(year==\"2022\")|&gt;\n  group_by(`NTD ID`,\nAgency,\nmetro_area,\nMode)|&gt;\n  summarize(\n    total_UPT=sum(UPT,na.rm = TRUE),\n    total_VRM=sum(VRM,na.rm = TRUE),.groups=\"drop\"\n  )|&gt;\n  ungroup()\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n           FINANCIALS, \n           join_by(`NTD ID`, Mode)) |&gt;\n    drop_na()|&gt;select(-`Agency Name`)\nUSAGE_AND_FINANCIALS_top&lt;-USAGE_AND_FINANCIALS |&gt; filter(total_UPT&gt;=400000) \n\n\n\n\nCode\nUSAGE_AND_FINANCIALS_top|&gt;DT:: datatable()\n\n\n\n\n\n\n\n\nFarebox Recovery and Cost Efficiency in Transit Systems\n\n1. Transit System with the Highest Farebox Recovery For The Year 2022\nFarebox recovery is the ratio of Total Fares to Total Expenses, measuring how effectively fare revenue covers a transit system’s operational costs. It’s crucial for a transit agency to generate enough revenue from passengers to offset its operating expenses. A higher farebox recovery ratio reduces the agency’s reliance on alternative funding sources to keep the transit system running.\n\n\nCode\ntable_creation(USAGE_AND_FINANCIALS_top |&gt; \n  group_by(Agency, Mode) |&gt; \n  summarize(\n    fare_box_ratio = round(ifelse(`Total Fares` &gt; 0, `Total Fares`, NA_real_) / ifelse(Expenses &gt; 0, Expenses, NA_real_),2\n  )) |&gt; \n  arrange(desc(fare_box_ratio)) |&gt; \n  ungroup() |&gt; \n  slice(1:5))\n\n\n`summarise()` has grouped output by 'Agency', 'Mode'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\nAgency: Port Imperial Ferry Corporation\nMode: Ferry Boat\nFarebox Recovery Ratio: 1.43\nInteresting Facts about Port Imperial Ferry’s Role\nIn 2022, the system with the highest farebox recovery ratio was the Port Imperial Ferry Corporation.\n\n\nPrime Location: Port Imperial terminal, located in Weehawken, New Jersey, connects commuters from New Jersey’s Hudson River waterfront to key locations in Manhattan. It is a crucial transportation link, especially for daily commuters.\n\nIntermodal Hub: It is also part of an intermodal hub, with connections to New Jersey Transit’s Hudson-Bergen Light Rail. This makes it easier for commuters to switch transit modes, enhancing the system’s convenience.\n\nTime-Saving Option: Their primary customers are daily commuters as it is often faster than other transit modes during rush hours, avoiding heavy traffic on bridges and tunnels, making it a preferred option for those seeking efficiency.\n\nSummary: Port Imperial Ferry’s high farebox recovery is driven by its limited competition, strategic docking agreements, loyal commuter base, and efficient cost management, allowing the service to generate significant revenue relative to its operational costs.\n\n\n\n\n2. Transit System with the Lowest Expenses per Unlinked Passenger Trip (UPT)\nExpenses per UPT measure the cost efficiency of a transit system, indicating how much the agency spends to serve per unlinked passenger trip.\n\n\nCode\ntable_creation(USAGE_AND_FINANCIALS_top |&gt; \n  group_by(Agency, Mode) |&gt; \n  summarize(\n    expenses_per_UPT = round(ifelse(Expenses &gt; 0, Expenses, NA_real_) / total_UPT\n  ,2)) |&gt; \n  arrange(expenses_per_UPT) |&gt; \n  ungroup() |&gt; \n  slice(1:5))\n\n\n\n\n\n\nAgency: North Carolina State University\nMode: Motor Bus\nExpenses per UPT: 1.18 $/ride\n\n\nWhy NCSU’s Motorbus System is Profitable?\n\nCampus Size: North Carolina State University’s main campus spans over 2,000 acres. This vast area creates the need for an internal transportation network to efficiently connect different parts of the university.\nTransportation Master Plan: NCSU has a well-structured Transportation Master Plan aimed at improving and optimizing its transportation network. This plan includes strategies to enhance route efficiency, reduce congestion, and ensure the system meets the growing demands of the campus population.\nInstitutional Support and Subsidies: NCSU likely subsidizes a portion of the motor bus system’s operating costs, which helps keep operational expenses lower. University funding or student fees may cover some costs, reducing the financial burden on passengers while keeping fares affordable, if not free.\nHigh Ridership: With a high volume of students and staff commuting daily, the system benefits from economies of scale. High passenger volume distributes operational costs across more riders, making the cost per trip lower, and ensuring the bus system operates efficiently.\nFocused Cost Management: NCSU’s internal control over the transportation system allows for focused cost management. With optimized vehicle maintenance, route planning, and operational schedules, the motor bus system is kept cost-efficient, ensuring its financial sustainability.\nSummary: NCSU’s motor bus system is profitable due to the combination of a large and spread-out campus, optimized and efficient route planning, institutional subsidies, and high ridership levels. This strategic approach, combined with NCSU’s Transportation Master Plan, ensures that the system operates at a low cost, making it not only cost-efficient but also potentially profitable.\n\n\n\n\n3. Transit System with the Highest Total Fares per UPT\nThe highest total fares per UPT indicate the system that generates the most fare revenue per passenger trip.\n\n\nCode\ntable_creation(USAGE_AND_FINANCIALS_top |&gt; \n  group_by(Agency, Mode) |&gt; \n  summarize(\n    totalfares_per_UPT = round(ifelse(`Total Fares` &gt; 0, `Total Fares`, NA_real_) / total_UPT\n  ,2)) |&gt; \n  arrange(desc(totalfares_per_UPT)) |&gt; \n  ungroup() |&gt; \n  slice(1:5))\n\n\n\n\n\n\nAgency: Hampton Jitney, Inc\nMode: Commuter Bus\nFares per UPT: 41.3 $/mile\nHampton Jitney is a commuter bus company.  Their Three primary routes from the east end of Long Island (The Hamptons and the North Fork) to New York City. Hampton Jitney also operates charter and tour services, along with local transit bus service in eastern Suffolk County under contract with Suffolk County Transit.\n\n\nWhy Hampton Jitney, Inc. has the highest fare per UPT?\n\nWealthy Customer Base : The Hampton Jitney serves affluent passengers traveling between New York City and the Hamptons, a popular destination for wealthy individuals. These passengers are generally less sensitive to price and are willing to pay premium fares for a convenient, comfortable ride.\n\nPrivate Agency : As a private transportation service, Hampton Jitney is not bound by government fare controls or subsidies. This allows the agency to charge market-based fares that reflect the demand and exclusive nature of the service.\n\nPremium Service : The Hampton Jitney offers luxury features such as comfortable seating, Wi-Fi, and direct routes, which justify the higher fare prices. Customers are paying not just for transportation, but for an upscale, stress-free experience.\nConvenient and Direct Routes: The bus service offers direct transportation from Manhattan to the Hamptons, saving passengers the hassle of driving or taking multiple transfers on public transportation. This convenience is a major factor in the willingness of passengers to pay higher fares.\nSeasonal Demand: The Hamptons is a popular summer destination, and during peak seasons, demand for transportation to and from the area skyrockets. Hampton Jitney can charge premium fares during these high-demand periods, further increasing their fare per UPT.\n\nConclusion: Hampton Jitney’s high fare per ride is driven by its affluent customer base, premium service offerings, convenient routes, and its ability to charge market-driven prices as a private agency. The high fare reflects the value that customers place on convenience and comfort, particularly when traveling to a luxury destination like the Hamptons.\n\n\n\n\n\n4. Transit System with the Lowest Expenses per Vehicle Revenue Mile (VRM)\nThis metric shows the agency that operates most efficiently in terms of expenses for each mile their vehicles are in service.\n\n\nCode\ntable_creation(USAGE_AND_FINANCIALS_top |&gt; \n  group_by(Agency, Mode) |&gt; \n  summarize(\n    expenses_per_VRM = round(ifelse(Expenses &gt; 0, Expenses, NA_real_) / ifelse(total_VRM &gt; 0, total_VRM, NA_real_),2)\n  ) |&gt; \n  arrange(expenses_per_VRM) |&gt; \n  ungroup() |&gt; \n  slice(1:5))\n\n\n\n\n\n\nAgency: Metropolitan Transportation Commission\nMode: Vanpool\nExpenses per VRM: 0.445 $/mile\n**Metro-Area*:** San Francisco--Oakland, CA\nThe Bay Area Vanpool Program, managed by the MTC, supports groups of 7 to 15 commuters traveling together with an unpaid driver.\n\nAccording to the Berkleyside, Casual Carpool was a Bay Area tradition before COVID. Post Covid, longtime riders and drivers who want to revive casual carpool are finding it difficult to reestablish the famously organic tradition. But since many people are returning to work and seeking efficient ways to travel, and it’s interesting to observe that there’s a slow resurgence of this informal carpooling tradition.\n\nWhy MTC’S Vanpool reduce expenses per Vehicle Revenue Mile (VRM)?\n\nCost-Effective Commute : Vanpooling is often more economical than driving alone, with participants sharing the costs of fuel, tolls, and maintenance. This can lead to significant savings for commuters.\n\nSustainable Way : By reducing the number of single-occupancy vehicles on the road, vanpools help decrease traffic congestion and lower greenhouse gas emissions, contributing to a more sustainable environment.\n\nVanpool Rewards : The MTC actively promotes vanpooling as part of its broader strategy to enhance public transportation options and reduce reliance on individual car travel. Each counties provides different benefits including pre-tax benefits, discounted parking permits and subsidies for commuter vanpoolers\n\n\n\n\n\n5. Transit System with the Highest Total Fares per VRM\n\nThe highest total fares per VRM represent the system that generates the most fare revenue for each mile that its vehicles are in service.\n\n\n\nCode\ntable_creation(USAGE_AND_FINANCIALS_top |&gt; \n  group_by(Agency, Mode) |&gt; \n  summarize(\n    fares_per_VRM = round(ifelse(`Total Fares` &gt; 0, `Total Fares`, NA_real_) / ifelse(total_VRM &gt; 0, total_VRM, NA_real_),2)\n  ) |&gt; \n  arrange(desc(fares_per_VRM)) |&gt; \n  ungroup() |&gt; \n  slice(1:5))\n\n\n\n\n\n\nAgency: Jacksonville Transportation Authority\nMode: Ferryboat\nFares per VRM: 157.70 $/mile\nThe St. Johns River Ferry is an important transportation link, providing service across the St. Johns River and facilitating commuter travel."
  },
  {
    "objectID": "mp01.html#v.-what-do-you-believe-to-be-the-most-efficient-transit-system-in-the-country",
    "href": "mp01.html#v.-what-do-you-believe-to-be-the-most-efficient-transit-system-in-the-country",
    "title": "Analyzing Transit Data",
    "section": "V. What do you believe to be the most efficient transit system in the country?",
    "text": "V. What do you believe to be the most efficient transit system in the country?\nIn my view, the most efficient transit system is one that prioritizes the needs of the community rather than focusing solely on generating revenue. Such a system aims to provide reliable and accessible transportation options that serve the public effectively. Among the various transit modes analyzed, I find ferryboats to be particularly efficient, especially in terms of their overall Vehicle Revenue Miles (VRM) to Unlinked Passenger Trips (UPT) ratio. This efficiency indicates that ferryboats are capable of serving a substantial number of passengers relative to the distance traveled, making them a viable option for enhancing urban mobility.\nAdditionally, when considering cost-effectiveness and environmental sustainability, the Vanpool mode emerges as the best option. Vanpools not only reduce operational costs but also contribute positively to the environment by minimizing the number of individual vehicles on the road. By consolidating passengers into fewer vehicles, Vanpools can significantly decrease carbon emissions and traffic congestion, promoting a greener transit solution.\nUltimately, an efficient transit system should not merely aim for financial gain but should instead focus on fulfilling the transportation needs of its users while fostering sustainable practices. By investing in transit options like ferryboats and Vanpools, cities can create a more effective and environmentally friendly transportation network that benefits both the community and the planet."
  },
  {
    "objectID": "mp01.html#vi.-appendix",
    "href": "mp01.html#vi.-appendix",
    "title": "Analyzing Transit Data",
    "section": "VI. Appendix",
    "text": "VI. Appendix\nAdditional data and visualizations can be provided upon request, including full code listings and intermediate data tables."
  },
  {
    "objectID": "MP-DATA/dataverse_files2/codebook-us-president-1976-2020.html",
    "href": "MP-DATA/dataverse_files2/codebook-us-president-1976-2020.html",
    "title": "CLINTA PUTHUSSERY VARGHESE",
    "section": "",
    "text": "#Codebook for U.S. President Returns 1976–2016\nThe data file 1976-2016-president contains constituency (state-level) returns for elections to the U.S. presidency from 1976 to 2016. The data source is the document “Statistics of the Congressional Election,” published biennially by the Clerk of the U.S. House of Representatives.\n##Variables The variables are listed as they appear in the data file.\n###year - Description: year in which election was held\n\n###office - Description: U.S. PRESIDENT\n\n###state - Description: state name\n\n###state_po - Description: U.S. postal code state abbreviation\n\n###state_fips - Description: State FIPS code\n\n###state_cen - Description: U.S. Census state code\n\n\nstate_ic\n\nDescription: ICPSR state code\n\n\n\n\ncandidate\n\nDescription: name of the candidate\nNote: The name is as it appears in the House Clerk report.\n\n\n\n\nparty_detailed\n\nDescription: party of the candidate (always entirely uppercase)\n\nNote: Parties are as they appear in the House Clerk report. In states that allow candidates to appear on multiple party lines, separate vote totals are indicated for each party. Therefore, for analysis that involves candidate totals, it will be necessary to aggregate across all party lines within a district. For analysis that focuses on two-party vote totals, it will be necessary to account for major party candidates who receive votes under multiple party labels. Minnesota party labels are given as they appear on the Minnesota ballots. Future versions of this file will include codes for candidates who are endorsed by major parties, regardless of the party label under which they receive votes.\n\n\n\n\nparty_simplified\n\nDescription: party of the candidate (always entirely uppercase) The entries will be one of: DEMOCRAT, REPUBLICAN, LIBERTARIAN, OTHER\n\n\n\n\nwritein\n\nDescription: vote totals associated with write-in candidates\nCoding:\n\n|:–|:–| | “TRUE” | write-in candidates | | “FALSE” | non-write-in candidates |\n\n\n\ncandidatevotes\n\nDescription: votes received by this candidate for this particular party\nNote: Massachusetts and New York returns often contains entries for “blank,” “other/blank,” “scattering/blank,” and the like. For analyses that depend on an accurate count of votes cast for candidates (rather than turnout, including blank ballots), consult state returns. Future versions of this dataset will distinguish blank ballots from votes cast for scattering candidates.\n\n\n\n\ntotalvotes\n\nDescription: total number of votes cast for this election\n\n\n\n\nversion\n\nDescription: The date the dataset was last updated, in the format yyyymmdd\n\n\n\n\nmode\n\nDescription: The way in which the vote was cast: for example, whether the vote was cast absentee, on election day, or early."
  },
  {
    "objectID": "MP-DATA/dataverse_files/codebook-us-house-1976–2020.html",
    "href": "MP-DATA/dataverse_files/codebook-us-house-1976–2020.html",
    "title": "CLINTA PUTHUSSERY VARGHESE",
    "section": "",
    "text": "#Codebook for U.S. House Returns 1976–2020\nThe data file 1976-2020-house contains constituency (district) returns for elections to the U.S. House of Representatives from 1976 to 2020. The data source is the document “Statistics of the Congressional Election,” published biennially by the Clerk of the U.S. House of Representatives. 2018 data comes from official state election websites, and for Kansas, come from Stephen Pettigrew and the Kansas Secretary of State office (in some cases, they are marked as unofficial, and will be updated at a later time).\nAll string variables are in upper case.\n##Variables The variables are listed as they appear in the data file.\n###year - Description: year in which election was held\n\n###state - Description: state name\n\n###state_po - Description: U.S. postal code state abbreviation\n\n###state_fips - Description: State FIPS code\n\n###state_cen - Description: U.S. Census state code\n\n\nstate_ic\n\nDescription: ICPSR state code\n\n\n###office - Description: U.S. House (constant)\n\n\n\ndistrict\n\nDescription: district number\n****Note****: At-large districts are coded as 0 (zero).\n\n\n\n\nstage\n\nDescription: electoral stage\nCoding:\n\n\n\n\ncode\ndefinition\n\n\n\n\n“gen”\ngeneral elections\n\n\n“pri”\nprimary elections\n\n\n\n\nNote: Only appears in special cases. Consult original House Clerk report for these cases.\n\n\n\n\nspecial\n\nDescription: special election\nCoding\n\n\n\n\ncode\ndefinition\n\n\n\n\n“TRUE”\nspecial elections\n\n\n“FALSE”\nregular elections\n\n\n\n\n\n\ncandidate\n\nDescription: name of the candidate\nNote: The name is as it appears in the House Clerk report.\n\n\n\n\nparty\n\nDescription: party of the candidate (always entirely lowercase)\n\nNote: Parties are as they appear in the House Clerk report. In states that allow candidates to appear on multiple party lines, separate vote totals are indicated for each party. Therefore, for analysis that involves candidate totals, it will be necessary to aggregate across all party lines within a district. For analysis that focuses on two-party vote totals, it will be necessary to account for major party candidates who receive votes under multiple party labels. Minnesota party labels are given as they appear on the Minnesota ballots. Future versions of this file will include codes for candidates who are endorsed by major parties, regardless of the party label under which they receive votes.\n\n\n\n\n\nwritein\n\nDescription: vote totals associated with write-in candidates\nCoding:\n\n\n\n\ncode\ndefinition\n\n\n\n\n“TRUE”\nwrite-in candidates\n\n\n“FALSE”\nnon-write-in candidates\n\n\n\n\n\n\nmode\n\nDescription: mode of voting; states with data that doesn’t break down returns by mode are marked as “total”\n\n\n\n\ncandidatevotes\n\nDescription: votes received by this candidate for this particular party\n\n\n\n\ntotalvotes\n\nDescription: total number of votes cast for this election\n\n\n\n\nfusion_ticket\n\nDescription: A TRUE/FALSE indicator as to whether the given candidate is running on a fusion party ticket, which will in turn mean that a candidate will appear multiple times, but by different parties, for a given election. States with fusion tickets include Connecticut, New Jersey, New York, and South Carolina.\n\n\n\n\n\n\n\n## unofficial Description: TRUE/FALSE indicator for unofficial result (to be updated later); this appears only for 2018 data in some cases\n\n\n\n\n\nversion\n\nDescription: date when this dataset was finalized\n\n##NOTES:\ncandidatevotes: for uncontested races, value is set to 1 in FL. Should user want to set a higher value for analysis purposes, consider setting the value as the maximum for a given state-year. The code in R would be the following: df &lt;- read.csv(“1976-2018-house.csv”, stringsAsFactors = FALSE) df &lt;- df %&gt;% group_by(state_po,district) %&gt;% mutate(max_st_year_vote = max(candidatevotes, na.rm=T)\nThe following code should be used if the user would like to assume that uncontested candidates would have recieved as many votes as the best contested candidate.\ndistrict: district is set to 0 for single member states.\nparty and candidate: candidate - party combinations are recorded as they were on the state elections website. This means that for states where the same candidate might appear on multiple parties, like in NY, they are recorded as such. Therefore, for users interested in finding the primary party, run the following code:\ndf &lt;- read.csv(“1976-2020-house.csv”, stringsAsFactors = FALSE) df\\(district &lt;- str_pad(df\\)district, width=2, pad=“0”, side=“left) df\\(state_fips &lt;- str_pad(df\\)state_fips, width=2, pad=”0”, side=“left) df\\(GEOID &lt;- paste(df\\)state_fips, df$district, sep=”“) df_max &lt;- df %&gt;% group_by(candidate, GEOID, year) %&gt;% slice(which.max(candidatevotes) df_sum &lt;- df %&gt;% group_by(candidate, GEOID, year) %&gt;% aggregate(candvotes_sum = sum(candvotes))"
  }
]